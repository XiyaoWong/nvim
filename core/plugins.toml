# PackageManage
[[plugins]]
repo = 'Shougo/dein.vim'
on_func = 'dein#'

# completion
[[plugins]]
repo = 'neoclide/coc.nvim'
merged = 0
rev = 'release'
hook_add = 'source $VIM_PATH/configs/coc.vim'

[[plugins]]
repo = 'honza/vim-snippets'
depends = 'coc.nvim'
if = 'has("python3")'
merged =  0

# file explorer
[[plugins]]
repo = 'Shougo/defx.nvim'
on_cmd = 'Defx'
hook_source = 'source $VIM_PATH/configs/defx.vim'

[[plugins]]
repo = 'kristijanhusak/defx-git'
on_source = 'defx.nvim'

[[plugins]]
repo = 'kristijanhusak/defx-icons'
on_source = 'defx.nvim'

# finder
[[plugins]]
repo = 'liuchengxu/vim-clap'
merged = 0
build = 'bash install.sh'
on_map = { n = '<Plug>' }
hook_source = 'source $VIM_PATH/configs/vim-clap.vim'

[[plugins]]
repo = 'vn-ki/coc-clap'
on_source = 'vim-clap'

# UI
[[plugins]]
repo = 'ryanoasis/vim-devicons'

[[plugins]]
repo = 'rakr/vim-one'

[[plugins]]
repo = 'kristijanhusak/vim-hybrid-material'

[[plugins]]
repo = 'hardcoreplayers/oceanic-material'

[[plugins]]
repo = 'ayu-theme/ayu-vim'

[[plugins]]
repo = 'hardcoreplayers/dashboard-nvim'
hook_add = 'source $VIM_PATH/configs/dashboard.vim'

[[plugins]]
repo = 'hardcoreplayers/vim-buffet'
if = 1
hook_source = '''
  function! g:BuffetSetCustomColors()
    hi! link BuffetTab Keyword
    hi! link BuffetBuffer Visual
    hi! link BuffetActiveBuffer StatusLineNC
    hi! link BuffetCurrentBuffer Function
  endfunction
  let g:buffet_show_index = 10
  let g:buffet_powerline_separators = 0
  let g:buffet_tab_icon = ""
  let g:buffet_left_trunc_icon = ""
  let g:buffet_right_trunc_icon = ""
  let g:buffet_modified_icon = ' ⭒'
'''

[[plugins]]
repo = 'hardcoreplayers/spaceline.vim'
hook_add = '''
  let g:spaceline_colorscheme = 'one'
  let g:spaceline_seperate_style= 'none'
  let g:spaceline_custom_vim_status =  {"n": "N ","V":"V ","v":"V ","\<C-v>": "V ","i":"I ","R":"R ","s":"S ","t":"C ","c":"C ","!":"SE"}
  let g:spaceline_custom_diff_icon =  [' ',' ',' ']
  let g:spaceline_git_branch_icon= ' '
  let g:spaceline_diagnostic_errorsign = '✗ '
  let g:spaceline_diagnostic_warnsign = '≈ '
'''

# enhance
[[plugins]]
repo = 'rhysd/accelerated-jk'
on_map = {n = '<Plug>'}

[[plugins]]
repo = 'psliwka/vim-smoothie'
on_func = 'smoothie#'
hook_add = '''
  let g:smoothie_no_default_mappings = v:true
'''

[[plugins]]
repo = 'lfv89/vim-interestingwords'
if = 1

[[plugins]]
repo = 'itchyny/vim-cursorword'
if = 1

[[plugins]]
repo = 'Yggdroot/indentLine'
on_event = 'BufReadPre'
hook_source = '''
    let g:indentLine_enabled = 1
    let g:indentLine_char='┆'
    let g:indentLine_fileTypeExclude = ['defx', 'denite','startify','tagbar','vista_kind','vista','coc-explorer','dashboard']
    let g:indentLine_concealcursor = 'niv'
    let g:indentLine_showFirstIndentLevel =1
'''

[[plugins]]
repo = 'simnalamburt/vim-mundo'
on_cmd = 'MundoToggle'

[[plugins]]
repo = 'pechorin/any-jump.vim'
on_cmd = 'AnyJump'

[[plugins]]
repo = 'voldikss/vim-floaterm'
on_cmd = ['FloatermNew', 'FloatermToggle', 'FloatermPrev', 'FloatermNext', 'FloatermSend']

[[plugins]]
repo = 'kien/rainbow_parentheses.vim'
hook_post_source = 'source $VIM_PATH/configs/rainbow_parentheses.vim'

[[plugins]]
repo = 'editorconfig/editorconfig-vim'
hook_add = '''
	let g:EditorConfig_exclude_patterns = ['fugitive://.*', 'scp://.*']
'''

[[plugins]]
repo = 'tyru/caw.vim'
depends = 'context_filetype.vim'
on_map = { nx = '<Plug>' }

[[plugins]]
repo = 'tpope/vim-surround'

[[plugins]]
repo = 'easymotion/vim-easymotion'
on_map = { n = '<Plug>' }
hook_source = '''
    let g:EasyMotion_do_mapping = 0
    let g:EasyMotion_prompt = 'Jump to → '
    let g:EasyMotion_keys = 'fjdkswbeoavn'
    let g:EasyMotion_smartcase = 1
    let g:EasyMotion_use_smartsign_us = 1
'''

[[plugins]]
repo = 'junegunn/vim-easy-align'
if = 1

[[plugins]]
repo = 'sbdchd/neoformat'
on_cmd = 'Neoformat'

[[plugins]]
repo = 'voldikss/vim-floaterm'
on_cmd = ['FloatermNew', 'FloatermToggle', 'FloatermPrev', 'FloatermNext', 'FloatermSend']

[[plugins]]
repo = 'thinca/vim-quickrun'
on_cmd = 'QuickRun'

[[plugins]]
repo = 'farmergreg/vim-lastplace'

[[plugins]]
repo = 'liuchengxu/vista.vim'
on_cmd = ['Vista', 'Vista!', 'Vista!!']
hook_source = '''
    let g:vista#renderer#enable_icon = 1
    let g:vista_disable_statusline = 1
    let g:vista_default_executive = 'ctags'
    let g:vista_echo_cursor_strategy = 'floating_win'
    let g:vista_vimwiki_executive = 'markdown'
    let g:vista_executive_for = {
      \ 'vimwiki': 'markdown',
      \ 'pandoc': 'markdown',
      \ 'markdown': 'toc',
      \ 'yaml': 'coc',
      \ 'typescript': 'coc',
      \ 'typescriptreact': 'coc',
      \ }
'''

[[plugins]]
repo = 'junegunn/goyo.vim'
on_cmd = 'Goyo'
hook_source = 'source $VIM_PATH/configs/goyo.vim'

[[plugins]]
repo = 'junegunn/Limelight.vim'
on_cmd = 'Limelight'
hook_add = '''
  let g:limelight_conceal_ctermfg = 'gray'
  let g:limelight_conceal_ctermfg = 240
  let g:limelight_conceal_guifg = 'DarkGray'
  let g:limelight_conceal_guifg = '#777777'
'''

# filetype
[[plugins]]
repo = 'cespare/vim-toml'
on_ft = 'toml'

[[plugins]]
repo = 'kevinoid/vim-jsonc'
on_ft = 'json'

[[plugins]]
repo = 'dart-lang/dart-vim-plugin'
on_ft = 'dart'

[[plugins]]
repo = 'Shougo/context_filetype.vim'

[[plugins]]
repo = 'suan/vim-instant-markdown'
on_ft = 'markdown'
hook_source = '''
  let g:instant_markdown_autostart = 0
'''

[[plugins]]
repo = 'liuchengxu/vim-which-key'
on_cmd = ['Whichkey', 'Whichkey!']
hook_add = '''
  let g:which_key_map =  { 'name' : 'Leader'}
  let g:which_key_localmap =  {'name' : 'LocalLeader'}
'''
hook_post_source = '''
  function! s:register_whichkey()
    let s:leader_key=substitute(get(g:,"mapleader","\\"), ' ', ',', '')
    let s:localleader_key= get(g:,'maplocalleader',';')
    call which_key#register(s:leader_key, 'g:which_key_map')
    call which_key#register(s:localleader_key, 'g:which_key_localmap')
  endfunction
  call s:register_whichkey()
'''

# version
[[plugins]]
repo = 'tpope/vim-fugitive'
on_cmd = [ 'G', 'Git', 'Gfetch', 'Gpush', 'Glog', 'Gclog', 'Gdiffsplit' ]
hook_source = '''
    augroup user_fugitive_plugin
      autocmd!
      autocmd FileType fugitiveblame normal A
    augroup END
'''

# language
[[plugins]]
repo = 'fatih/vim-go'
on_ft = 'go'

[[plugins]]
repo = 'plasticboy/vim-markdown'
on_ft =  'markdown'
hook_add = '''
  let g:vim_markdown_frontmatter = 1
  let g:vim_markdown_strikethrough = 1
  let g:vim_markdown_folding_level = 6
  let g:vim_markdown_override_foldtext = 1
  let g:vim_markdown_folding_style_pythonic = 1
  let g:vim_markdown_conceal = 1
  let g:vim_markdown_conceal_code_blocks = 1
  let g:vim_markdown_new_list_item_indent = 0
  let g:vim_markdown_toc_autofit = 0
  let g:vim_markdown_edit_url_in = 'vsplit'
  let g:vim_markdown_fenced_languages = [
    \ 'c++=cpp',
    \ 'viml=vim',
    \ 'bash=sh',
    \ 'ini=dosini',
    \ 'js=javascript',
    \ 'json=javascript',
    \ 'jsx=javascriptreact',
    \ 'tsx=typescriptreact',
    \ 'docker=Dockerfile',
    \ 'makefile=make',
    \ 'py=python'
    \ ]
'''
