{
  "codeLens.enable": true,

  "suggest.noselect": false,
  "suggest.snippetIndicator": " ",
  "suggest.completionItemKindLabels": {
    "keyword": " (keyword)",
    "variable": " (variable)",
    "value": " (value)",
    "operator": "Ψ (operator)",
    "function": "ƒ (function)",
    "reference": "渚 (reference)",
    "constant": " (constant)",
    "method": " (method)",
    "struct": "פּ (struct)",
    "class": " (class)",
    "interface": " (interface)",
    "text": " (text)",
    "enum": " (enum)",
    "enumMember": " (enumMember)",
    "module": " (module)",
    "color": " (color)",
    "property": " (property)",
    "field": "料(field)",
    "unit": " (unit)",
    "event": " (event)",
    "file": " (file)",
    "folder": " (folder)",
    "snippet": " (snippet)",
    "typeParameter": " (typeParameter)",
    "default": " (default)"
  },

  // preferences
  "coc.preferences.extensionUpdateCheck": "daily",
  "coc.preferences.formatOnType": true,
  "coc.preferences.formatOnSaveFiletypes": ["rust"],

  // diagnostic
  "diagnostic.hintSign": "",
  "diagnostic.infoSign": "",
  "diagnostic.warningSign": "",
  "diagnostic.errorSign": "",
  "diagnostic.virtualText": true,
  "diagnostic.virtualTextPrefix": " ﯑ ",
  "diagnostic.virtualTextCurrentLineOnly": false,
  "diagnostic.refreshOnInsertMode": true,
  "diagnostic.checkCurrentLine": true,
  "diagnostic.format": "%message [%source%code]",
  "diagnostic.separateRelatedInformationAsDiagnostics": true,

  // lua
  "Lua.diagnostics.globals": ["vim"],
  "Lua.runtime.version": "Lua 5.1",

  // python
  "python.linting.enabled": false,
  "python.analysis.diagnosticMode": "workspace",
  "python.sortImports.args": ["-m3"],
  "python.formatting.provider": "black",
  "python.formatting.blackArgs": ["--skip-string-normalization"],

  // javascript
  "javascript.suggestionActions.enabled": false,

  // prettier
  "prettier.printWidth": 90,
  "prettier.singleQuote": true,
  "prettier.eslintIntegration": true,

  // eslint
  "eslint.autoFixOnSave": true,

  // go
  "go.goplsOptions": {
    "semanticTokens": true,
    "linksInHover": false,
    "usePlaceholders": true,
    "staticcheck": true
  },

  // languageservers
  "languageserver": {
    "kotlin": {
      "command": "kotlin-language-server",
      "filetypes": ["kotlin"]
    }
  }
}
