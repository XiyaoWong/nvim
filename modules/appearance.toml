[[plugins]]
repo = 'ryanoasis/vim-devicons'

[[plugins]]
repo = 'kyazdani42/nvim-web-devicons'

[[plugins]]
repo = 'rakr/vim-one'

[[plugins]]
repo = 'kristijanhusak/vim-hybrid-material'

[[plugins]]
hook_add = "let g:sonokai_style = 'atlantis'"
repo     = 'sainnhe/sonokai'

[[plugins]]
hook_add = '''
  let g:dashboard_custom_shortcut={
    \ 'new_file':           'spc n f',
    \ 'last_session':       'spc s l',
    \ 'find_history':       'spc f h',
    \ 'find_file':          'spc f f',
    \ 'change_colorscheme': 'spc t c',
    \ 'find_word':          'spc f a',
    \ 'book_marks':         'spc f b',
    \ }

  let g:dashboard_custom_footer = ['']
  let g:dashboard_custom_header = ['','','','','','Welcome😃    ',]
'''
repo     = 'glepnir/dashboard-nvim'

[[plugins]]
hook_post_source = '''
lua << EOF
require'bufferline'.setup{
    options = {
      modified_icon = '✥',
      buffer_close_icon = '×',
      mappings = true,
      always_show_bufferline = false,
    };
    highlights = {
      bufferline_selected = {
        gui = "bold",
      };
    };
  }
EOF
'''
on_event         = 'VimEnter'
repo             = 'akinsho/nvim-bufferline.lua'

[[plugins]]
hook_post_source = '''
lua require'eviline'
'''
repo             = 'glepnir/galaxyline.nvim'

# [[plugins]]
# hook_add = '''
#   let g:spaceline_colorscheme = 'one'
#   let g:spaceline_seperate_style= 'none'
#   let g:spaceline_custom_vim_status = {'n': " ", 'V': " ", 'v': " ", "\<C-v>": "C-V", 'i':" ", 'R':"גּ ", 's':" ", 't':"ﭨ ", 'c':"↪ ", "!": "SE"}
#   let g:spaceline_custom_diff_icon =  [' ',' ',' ']
#   let g:spaceline_git_branch_icon= ' '
#   let g:spaceline_diagnostic_errorsign = '✗ '
#   let g:spaceline_diagnostic_warnsign = '≈ '
# '''
# repo     = 'glepnir/spaceline.vim'

# [[plugins]]
# hook_source = 'source $VIM_PATH/configs/defx.vim'
# on_cmd      = 'Defx'
# repo        = 'Shougo/defx.nvim'
# 
# [[plugins]]
# on_source = 'defx.nvim'
# repo      = 'kristijanhusak/defx-git'
# 
# [[plugins]]
# on_source = 'defx.nvim'
# repo      = 'kristijanhusak/defx-icons'

# [[plugins]]
# repo = 'wfxr/minimap.vim'
# on_event = ['BufEnter', 'BufLeave']
# hook_source = '''
#   let g:minimap_width = 10
#   let g:minimap_highlight = 'keyword'
#   let g:minimap_auto_start = 1
# '''

# [[plugins]]
# hook_add = '''
#   let g:scrollbar_shape = {
#   \ 'head': '▕',
#   \ 'body': '▕',
#   \ 'tail': '▕',
#   \ }
#   let g:scrollbar_highlight = {
#   \ 'head': 'Comment',
#   \ 'body': 'Comment',
#   \ 'tail': 'Comment',
#   \ }
#   let g:scrollbar_max_size = 3
#   let g:scrollbar_excluded_filetypes = ['defx', 'tagbar', 'dashboard', 'vista_kind']
#   autocmd BufEnter    * silent! lua require('scrollbar').show()
#   autocmd BufLeave    * silent! lua require('scrollbar').clear()
#   autocmd CursorMoved * silent! lua require('scrollbar').show()
#   autocmd VimResized  * silent! lua require('scrollbar').show()
#   autocmd FocusGained * silent! lua require('scrollbar').show()
#   autocmd FocusLost   * silent! lua require('scrollbar').clear()
# '''
# on_event = ['BufEnter', 'BufLeave']
# repo     = 'Xuyuanp/scrollbar.nvim'

[[plugins]]
hook_source = '''
  let g:lua_tree_hide_dotfiles = 1
  let g:lua_tree_indent_markers = 1
  let g:lua_tree_auto_open = 0
  let g:lua_tree_ignore = [ '.git', 'node_modules', '.cache' , '__pycache__']
  let g:lua_tree_bindings = {
    \ 'edit':            ['<CR>', 'o'],
    \ 'edit_vsplit':     's',
    \ 'edit_split':      'i',
    \ 'toggle_dotfiles': '.',
    \ }
  let g:lua_tree_icons = {
    \ 'default': '',
    \ 'symlink': '',
    \ 'git': {
    \   'unstaged': "✚",
    \   'staged': "✚",
    \   'unmerged': "≠",
    \   'renamed': "≫",
    \   'untracked': "★"
    \   },
    \ 'folder': {
    \   'default': "",
    \   'open': ""
    \   }
    \ }
'''
repo        = 'kyazdani42/nvim-tree.lua'

[[plugins]]
hook_source = '''
    let g:indentLine_enabled = 1
    let g:indentLine_char='¦'
    let g:indentLine_fileTypeExclude = ['defx', 'LuaTree', 'denite','startify','tagbar','vista_kind','vista','coc-explorer','dashboard']
    let g:indentLine_concealcursor = 'niv'
    let g:indentLine_showFirstIndentLevel = 1
'''
on_event    = 'BufReadPre'
repo        = 'Yggdroot/indentLine'

# [[plugins]]
# hook_add    = '''
#     let g:indent_guides_default_mapping = 0
#     let g:indent_guides_tab_guides = 0
#     let g:indent_guides_color_change_percent = 3
#     let g:indent_guides_guide_size = 1
#     let g:indent_guides_exclude_filetypes = [
#       \ 'help', 'defx', 'denite', 'denite-filter', 'startify',
#       \ 'vista', 'vista_kind', 'tagbar', 'lsp-hover', 'clap_input',
#       \ 'any-jump', 'gina-status', 'gina-commit', 'dashboard','terminal']
# '''
# hook_source = 'let g:indent_guides_enable_on_vim_startup = 1'
# repo        = 'nathanaelkane/vim-indent-guides'

[[plugins]]
hook_source = 'let g:rainbow_active = 1'
repo        = 'luochen1990/rainbow'

[[plugins]]
on_event = 'BufReadPre'
repo     = 'itchyny/vim-highlighturl'
